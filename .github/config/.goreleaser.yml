version: 2

before: # Commands to run before the build
  hooks:
    - go mod tidy
    # - go test ./...
    # - go generate ./...

builds: # Build configurations
  - id: go-prototype-backend
    binary: go-prototype-backend
    main: ./cmd/api
    env:
      - CGO_ENABLED=0
    mod_timestamp: "{{ .CommitTimestamp }}" # Uses the timestamp of the Git commit being released
    # flags:
    #   - -trimpath # Removes filesystem paths from the compiled binary
    ldflags: # controls how your binary is built
      - "-s -w -X main.branch={{.Branch}} -X main.version={{ .Version }} -X main.commit={{ .Commit }}"
    goos:
      - linux
    goarch:
      - amd64
      - arm64

# Archive configurations 
# you can test the generating archives using 'goreleaser release --snapshot --rm-dist'
archives:
  - format: tar.gz
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # wrap_in_directory: true
    format_overrides:
      - goos: windows
        format: zip

checksum:
  name_template: "checksums.txt"

changelog: 
  disable: true # disabling since we are generating the same using semantic-release

# Removed deprecated snapshot.name_template configuration
# For snapshot testing use: goreleaser release --snapshot --clean

# Docker image configuration
dockers:
  - image_templates:
    - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-amd64"
    - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:latest-amd64"
    use: buildx
    goos: linux
    goarch: amd64
    build_flag_templates:
    - "--pull"
    - "--label=org.opencontainers.image.created={{.Date}}"
    - "--label=org.opencontainers.image.title={{.ProjectName}}"
    - "--label=org.opencontainers.image.revision={{.FullCommit}}"
    - "--label=org.opencontainers.image.version={{.Version}}"
    - "--platform=linux/amd64"
    dockerfile: .github/config/Dockerfile.goreleaser
    skip_push: false
  - image_templates:
    - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-arm64"
    - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:latest-arm64"
    use: buildx
    goos: linux
    goarch: arm64
    build_flag_templates:
    - "--pull"
    - "--label=org.opencontainers.image.created={{.Date}}"
    - "--label=org.opencontainers.image.title={{.ProjectName}}"
    - "--label=org.opencontainers.image.revision={{.FullCommit}}"
    - "--label=org.opencontainers.image.version={{.Version}}"
    - "--platform=linux/arm64"
    dockerfile: .github/config/Dockerfile.goreleaser
    skip_push: false

docker_manifests:
  - name_template: "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}"
    image_templates:
    - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-amd64"
    - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{ .Version }}-arm64"
  - name_template: "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:latest"
    image_templates:
    - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:latest-amd64"
    - "ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:latest-arm64"