name: Release

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  goreleaser:
    environment: Release # This links to your GitHub Environment where you set your environment variables and secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.1'
          cache: true

      # Run linting checks using golangci-lint
      - name: Lint Go Code
        uses: golangci/golangci-lint-action@v7
        with:
          version: latest
          args: --timeout=7m

      # Run unit tests
      - name: Run Go Tests
        run: go test -v ./...

      # Authenticates workflow to GitHub Container Registry for publishing Docker images
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}

      # Enables multi-architecture Docker image builds (amd64+arm64)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Determines the next semantic version number and creates a release
      - name: Semantic Release
        id: semantic-release
        uses: cycjimmy/semantic-release-action@v4
        with:
          extra_plugins: |
            @semantic-release/git
            @semantic-release/exec
            @semantic-release/changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      # Builds and publishes Go binaries and Docker images
      - name: Run GoReleaser
        # Only run GoReleaser if semantic-release created a new release
        if: ${{ steps.semantic-release.outputs.new_release_published == 'true' }}
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          VERSION: ${{ steps.semantic-release.outputs.new_release_version }}
