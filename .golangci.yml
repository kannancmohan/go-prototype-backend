run:
  # Concurrently run upto 4
  concurrency: 4
  # Issue exit code
  issues-exit-code: 1
  # Lint tests
  tests: true
  # Lint timeout
  timeout: 5m

linters-settings:
  errcheck:
    # report about assignment of errors to blank identifier: `num, _ := strconv.Atoi(numStr)`.
    # Such cases aren't reported by default.
    # Default: false
    check-blank: true
    # Report about not checking of errors in type assertions: `a := b.(MyStruct)`.
    # Such cases aren't reported by default.
    # Default: false
    check-type-assertions: true
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
  gocyclo:
    min-complexity: 15
  gofumpt:
    module-path: github.com/kannancmohan/go-prototype-backend
    extra-rules: true
  # Import statements are formatted
  goimports:
    local-prefixes: github.com/kannancmohan/go-prototype-backend
  gosimple:
    checks: ["all"]
  govet:
    enable-all: true
    disable:
      - fieldalignment
  ireturn:
    allow:
      - error
  lll:
    line-length: 150
  misspell:
    locale: US
  nolintlint:
    allow-unused: false
    require-explanation: true
    require-specific: true
  prealloc:
    simple: true
    range-loops: true
    for-loops: true
  promlinter:
    strict: true
  revive:
    rules:
      - name: blank-imports
        disabled: true
      - name: context-as-argument
      - name: context-keys-type
      - name: dot-imports
      - name: error-return
      - name: error-strings
      - name: error-naming
      - name: exported
      - name: if-return
      - name: increment-decrement
      - name: var-naming
      - name: var-declaration
        disabled: true
      - name: package-comments
      - name: range
      - name: receiver-naming
      - name: time-naming
      - name: unexported-return
      - name: indent-error-flow
      - name: errorf
      - name: empty-block
      - name: superfluous-else
      - name: unused-parameter
      - name: unreachable-code
      - name: redefines-builtin-id
  staticcheck:
    checks: ["all"]
  stylecheck:
    checks: ["all"]
    http-status-code-whitelist: []

linters:
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    # - containedctx # discourages using of Context inside struct
    - contextcheck
    - copyloopvar
    - dogsled
    - dupl
    - durationcheck
    - errname
    - errorlint
    - exhaustive
    - forbidigo
    - forcetypeassert
    - goconst
    - gocritic
    - gocyclo #checks the cyclomatic complexity of functions
    - godot #Check if comments end in a period
    - gofumpt
    - goimports #Checks if code & import statements are formatted according to the goimports command
    - goprintffuncname
    - gosec
    - interfacebloat
    # - ireturn #enforces Accept Interfaces & Return Concrete Types
    - lll
    - misspell
    - nakedret
    - nestif
    - nilerr
    - nilnil
    - noctx
    - nolintlint
    - prealloc
    - predeclared
    - promlinter
    - revive
    # - rowserrcheck #Checks whether Rows.Err of sql rows is checked successfully
    # - sqlclosecheck #Checks that sql.Rows, sql.Stmt, sqlx.NamedStmt, pgx.Query are closed
    - stylecheck
    - tenv
    - testpackage
    - thelper
    - tparallel
    - unconvert
    - unparam
    - usestdlibvars
    - wastedassign
    - whitespace
    - wrapcheck #Checks that errors returned from external packages are wrapped

issues:
  exclude-rules:
    - path: _test\.go # skip check on _test.go
      linters:
        - errcheck
        - bodyclose
        - forcetypeassert
        - goconst
        - ireturn
        - dupl
    - path: _test\.go|.*/testutils/.+\.go # skip revive check on _test.go and from testutils folder
      text: "(unexported-return|dot-imports|unchecked-type-assertion)"
      linters:
        - revive
  include:
    - EXC0012
    - EXC0014
  exclude-dirs:
    - ^.git