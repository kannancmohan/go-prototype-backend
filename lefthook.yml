#
#   Refer https://github.com/evilmartians/lefthook/blob/master/docs/configuration.md
#
pre-commit:
  commands:
    check-go-lint-staged: # TODO alternate solution? maybe use --new-from-patch flag from golangci-lint
      run: |
        pkgs=$(git diff --staged --name-only --diff-filter=d '*.go' | xargs -r dirname | sort -u)
        if [ -n "$pkgs" ]; then
          golangci-lint run $(go list -f '{{.Dir}}' $pkgs)
        fi
      glob: "*.go"
    check-for-secrets:
      files: git diff --staged --name-only --diff-filter=d 
      run: 'if command -v gitleaks > /dev/null 2>&1; then gitleaks git --no-banner --pre-commit --staged --redact --verbose; else echo "ERROR: gitleaks is not installed. Please install it. See https://github.com/gitleaks/gitleaks#installing"; fi'
    # prettier:
    #   run: prettier --write .
    #   glob: "*.{json,yml,md}"
commit-msg:
  commands:
    check-commit:
      run: commitlint --edit "$1" --verbose

pre-push:
  parallel: true
  commands:
    check-go-fmt: # fail on any gofmt error
      run: |
        if gofmt -l $(find . -name '*.go' | grep -v vendor) | grep .; then
          echo "ERROR: Unformatted .go files. Run: gofmt -w ./..."
          exit 1
        fi
    check-go-lint: # fail on any golangci-lint error
      run: golangci-lint run ./...
    check-for-secrets:
      run: 'if command -v gitleaks > /dev/null 2>&1; then gitleaks git --no-banner --redact --verbose; else echo "ERROR: gitleaks is not installed. Please install it. See https://github.com/gitleaks/gitleaks#installing"; fi'
    run-go-test: # fail on any test error
      run: go test -v ./...
    check-go-mod: # fail if go mod needs updation
      run: |
        if [ -n "$(go mod tidy -diff 2>&1)" ]; then
          echo "ERROR: go.mod/go.sum out of sync. Run: go mod tidy"
          exit 1
        fi